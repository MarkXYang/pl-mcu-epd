Texas Instruments – MSP430
==========================

This section provides information specific to deploying the code on the reference MSP430 platform
hardware available from Plastic Logic. This provides a supported, stable environment in which to
investigate the behaviour of the code before moving on to a customised platform.

Parrot - MSP430 Processor Board
-------------------------------
The Parrot board docks with the Ruddock2 motherboard to provide access to the display interfaces. It has
the same form factor and connector pin out as a BeagleBone allowing the processors to be easily swapped
for evaluation or development work. The Parrot board can also be used without the Ruddock2 by connecting it directly to the Z6, Z7 or Raven boards via the 24-pin "serial" interface.

The board has the following features:

- MSP430F5438A, clocked at 20MHz
- A 32KHz oscillator for low power operation
- micro SD card socket
- On-board reset switch
- JTAG programming header (an adapter may be required to mate with the MSP-FET430UIF programmer)
- All 100 processor pins available on debug headers
- On-board power regulation and power socket (can also be powered from USB)
- The board has 1 LED for power good and another connected to a pin on the processor for status indication
- 24-pin "serial" interface to Z6, Z7 and Raven boards
- Provision for an SPI daisy-chain of MSP430 boards using 2 SPI channels (upstream and downstream)


Toolchains
----------

Code Composer Studio
^^^^^^^^^^^^^^^^^^^^
This has been used extensively during development of the code in conjunction with the MSP-FET430UIF
USB/JTAG programmer. Both have proved to be extremely reliable in use. There is a free version of the
tools which restrict the size of code they will generate to 16KB. The full version can be evaluated free for 90
days.

The current configuration of the code is too large to fit within the 16K limit, however by removing some
features, e.g. Fat file system support then the free version may be sufficient.

A very useful feature of the IDE is the ability to use standard printf type functions and have the output
displayed in a console window within the IDE. In order for this to work the amount of memory set aside for
the stack and heap must be increased and the “cio” functionality must be enabled in the project build
configuration.

A small amount of source code in the platform common layer was taken from Plastic Logic’s equivalent
Linux drivers. The code uses anonymous unions extensively and in order to get the code to compile it was
necessary to add a compiler flag (``--gcc``) to tell it to behave more like gcc.

For full instructions on how to configure Code Composer Studio for the Plastic Logic reference code project
please see the chapter 11: Code Composer Studio Setup.


msp430-gcc
^^^^^^^^^^
There is an open source msp430 tool chain available – msp430-gcc. Some work has been done to support this tool 
chain but the work is not yet complete. Much of the code compiles cleanly however there are some issues related 
to pragmas used to declare interrupt handlers. Full support for this tool chain will depend on customer demand.


.. raw:: pdf
 
   PageBreak

